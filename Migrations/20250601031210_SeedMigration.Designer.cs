// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RenzGrandWeddingblazor.ph.Data.Entities;

#nullable disable

namespace RenzGrandWeddingblazor.ph.Migrations
{
    [DbContext(typeof(AppDB1Context))]
    [Migration("20250601031210_SeedMigration")]
    partial class SeedMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RenzGrandWeddingblazor.ph.Data.Entities.Delivery", b =>
                {
                    b.Property<int>("DeliveryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DeliveryId"));

                    b.Property<decimal>("BusinessValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly?>("CreateDate")
                        .HasColumnType("date");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("DeleteDate")
                        .HasColumnType("date");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<string>("DeliveryAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeliveryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeliveryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ReceiptImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("UpdateDate")
                        .HasColumnType("date");

                    b.Property<int?>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("DeliveryId");

                    b.ToTable("Delivery", (string)null);
                });

            modelBuilder.Entity("RenzGrandWeddingblazor.ph.Data.Entities.ProductLine", b =>
                {
                    b.Property<int>("ProductLineId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductLineId"));

                    b.Property<string>("ProductLineCode")
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ProductLineName")
                        .HasColumnType("varchar(50)");

                    b.HasKey("ProductLineId");

                    b.ToTable("ProductLines");

                    b.HasData(
                        new
                        {
                            ProductLineId = 1,
                            ProductLineCode = "ET",
                            ProductLineName = "EnglishTek"
                        },
                        new
                        {
                            ProductLineId = 2,
                            ProductLineCode = "ICT",
                            ProductLineName = "ICT"
                        },
                        new
                        {
                            ProductLineId = 3,
                            ProductLineCode = "LMS",
                            ProductLineName = "LMS"
                        },
                        new
                        {
                            ProductLineId = 4,
                            ProductLineCode = "MT",
                            ProductLineName = "MathTek"
                        },
                        new
                        {
                            ProductLineId = 5,
                            ProductLineCode = "ROBOTEK",
                            ProductLineName = "RoboTek"
                        });
                });

            modelBuilder.Entity("RenzGrandWeddingblazor.ph.Data.Entities.Pullout", b =>
                {
                    b.Property<int>("PulloutId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PulloutId"));

                    b.Property<decimal?>("BusinessValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly?>("CreateDate")
                        .HasColumnType("date");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("DeleteDate")
                        .HasColumnType("date");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<int?>("DeliveryId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("PulloutDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PulloutDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PulloutName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("PulloutPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ReceiptImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SalesId")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("UpdateDate")
                        .HasColumnType("date");

                    b.Property<int?>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("PulloutId");

                    b.HasIndex("DeliveryId");

                    b.HasIndex("SalesId");

                    b.ToTable("Pullout", (string)null);
                });

            modelBuilder.Entity("RenzGrandWeddingblazor.ph.Data.Entities.Sales", b =>
                {
                    b.Property<int>("SalesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SalesId"));

                    b.Property<decimal>("BusinessValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly?>("CreateDate")
                        .HasColumnType("date");

                    b.Property<int?>("CreatedById")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("DeleteDate")
                        .HasColumnType("date");

                    b.Property<int?>("DeletedById")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("ReceiptImage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SalesDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SalesDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly?>("UpdateDate")
                        .HasColumnType("date");

                    b.Property<int?>("UpdatedById")
                        .HasColumnType("int");

                    b.HasKey("SalesId");

                    b.ToTable("Sales", (string)null);
                });

            modelBuilder.Entity("RenzGrandWeddingblazor.ph.Data.Entities.Pullout", b =>
                {
                    b.HasOne("RenzGrandWeddingblazor.ph.Data.Entities.Delivery", "Delivery")
                        .WithMany("Pullouts")
                        .HasForeignKey("DeliveryId");

                    b.HasOne("RenzGrandWeddingblazor.ph.Data.Entities.Sales", "Sales")
                        .WithMany("Pullouts")
                        .HasForeignKey("SalesId");

                    b.Navigation("Delivery");

                    b.Navigation("Sales");
                });

            modelBuilder.Entity("RenzGrandWeddingblazor.ph.Data.Entities.Delivery", b =>
                {
                    b.Navigation("Pullouts");
                });

            modelBuilder.Entity("RenzGrandWeddingblazor.ph.Data.Entities.Sales", b =>
                {
                    b.Navigation("Pullouts");
                });
#pragma warning restore 612, 618
        }
    }
}
