using Microsoft.AspNetCore.Identity;using RenzGrandWeddingblazor.ph.ViewModels; using RenzGrandWeddingblazor.ph.Data.Entities; using RenzGrandWeddingblazor.ph.Data; using RenzGrandWeddingblazor.ph.Data.Repositories; using codegeneratorlib.Helpers; namespace RenzGrandWeddingblazor.ph.Data.Repositories{	public class RepositoryWrapper : IRepositoryWrapper    {        private db_ab9d6a_dbrenzContext _context;		//private ISampleRepository _repo;		private IPulloutRepository _pullout_repo;		private ISalesRepository _sales_repo;		private IDeliveryRepository _delivery_repo;		private IProductLineRepository _productline_repo;		private ITitleRepository _title_repo;		private IParticularRepository _particular_repo;	    public RepositoryWrapper(db_ab9d6a_dbrenzContext context)        {            _context = context;        }                //public ISampleRepository _Repository		public IPulloutRepository Pullout_Repository { get { if (_pullout_repo == null) _pullout_repo = new PulloutRepository(_context); return _pullout_repo; } } 		public ISalesRepository Sales_Repository { get { if (_sales_repo == null) _sales_repo = new SalesRepository(_context); return _sales_repo; } } 		public IDeliveryRepository Delivery_Repository { get { if (_delivery_repo == null) _delivery_repo = new DeliveryRepository(_context); return _delivery_repo; } } 		public IProductLineRepository ProductLine_Repository { get { if (_productline_repo == null) _productline_repo = new ProductLineRepository(_context); return _productline_repo; } } 		public ITitleRepository Title_Repository { get { if (_title_repo == null) _title_repo = new TitleRepository(_context); return _title_repo; } } 		public IParticularRepository Particular_Repository { get { if (_particular_repo == null) _particular_repo = new ParticularRepository(_context); return _particular_repo; } }          }}